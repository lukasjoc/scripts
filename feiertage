#!/usr/bin/env python

import argparse
from argparse import ArgumentTypeError
from datetime import datetime
import json
import os
import sys

import platformdirs
import requests
from tabulate import tabulate


def main(args) -> int:
    cachepath = platformdirs.user_cache_path(appname="feiertage")
    if not cachepath.exists():
        cachepath.mkdir()

    cachefile = cachepath.joinpath(f"{args.year}-{args.state}.json")
    data = None
    if not cachefile.exists():
        api_url = f"https://feiertage-api.de/api/?jahr={args.year}&nur_land={args.state}"
        req = requests.get(api_url)
        if req.status_code != 200:
            raise requests.HTTPError(f"something went wrong with fetch the data: HTTP/{req.status_code}")

        data = req.json()
        with cachefile.open("w+") as f:
            json.dump(data, f, indent=2)

    if not data:
        with cachefile.open("r+") as f:
            data = json.load(f)

    rows = []
    for day, info in data.items():
        d = datetime.strptime(info.get("datum"), "%Y-%m-%d").strftime("%d.%m.%Y")
        notice = info.get("hinweis")
        rows.append([notice if notice else "-", day, d])

    if args.notice:
        if args.notice > len(rows): return 1
        nr = args.notice
        if (nr == len(rows)): nr = len(rows)-1
        if (nr == 0): nr = 0
        print(rows[nr][0])
        return 0

    table = tabulate(
        [["[!]" if r[0] != "-" else r[0], r[1], r[2]] for r in rows],
        headers=["Nr.", "Hinweis", "Name", "Datum"],
        showindex=True,
    )

    print(table)

    return 0


if __name__ == "__main__":
    def validate_state_code(state_code):
        states = ["NATIONAL", "BW", "BY", "BE", "BB", "HB", "HH", "HE", "MV", "NI", "NW", "RP",
            "SL", "SN", "ST", "SH", "TH"]
        if state_code not in states:
            raise ArgumentTypeError(f"{state_code} is not a valid German state code")
        return state_code

    argparse = argparse.ArgumentParser()
    argparse.add_argument("--state",  type=validate_state_code, help="a two-letter code representing a German federal state", default="BY")
    argparse.add_argument("--year",   type=int,                 help="filter for specific year", default=datetime.now().year)
    argparse.add_argument("--notice", type=int,                 help="show the notice at an index")
                                                                
    args = argparse.parse_args()
    sys.exit(main(args))
